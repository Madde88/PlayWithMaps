// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayWithMaps.Db;

#nullable disable

namespace MigrationCreator.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("PlayWithMaps.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double>("Long")
                        .HasColumnType("REAL");

                    b.Property<int>("PositionRecId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PositionRecId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("PlayWithMaps.Models.PositionRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PinCount")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("TraceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PositionRec");
                });

            modelBuilder.Entity("PlayWithMaps.Models.Position", b =>
                {
                    b.HasOne("PlayWithMaps.Models.PositionRec", "PositionRec")
                        .WithMany("Positions")
                        .HasForeignKey("PositionRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PositionRec");
                });

            modelBuilder.Entity("PlayWithMaps.Models.PositionRec", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
